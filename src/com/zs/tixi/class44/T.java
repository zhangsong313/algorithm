package com.zs.tixi.class44;

/**
 * 状态压缩的动态规划
 *
 * 内容：
 *
 * 动态规划的状态压缩技巧
 *
 * 题目：
 *
 * 在"100 game"这个游戏中，两名玩家轮流选择从1到10的任意整数，累计整数和
 * 先使得累计整数和达到或超过100的玩家，即为胜者，如果我们将游戏规则改为 “玩家不能重复使用整数” 呢？
 * 例如，两个玩家可以轮流从公共整数池中抽取从1到15的整数（不放回），直到累计整数和 >= 100
 * 给定一个整数 maxChoosableInteger （整数池中可选择的最大数）和另一个整数 desiredTotal（累计和）
 * 判断先出手的玩家是否能稳赢（假设两位玩家游戏时都表现最佳）
 * 你可以假设 maxChoosableInteger 不会大于 20， desiredTotal 不会大于 300。
 * Leetcode题目：https://leetcode.com/problems/can-i-win/
 *
 * TSP问题
 * 有N个城市，任何两个城市之间的都有距离，任何一座城市到自己的距离都为0
 * 所有点到点的距离都存在一个N*N的二维数组matrix里，也就是整张图由邻接矩阵表示
 * 现要求一旅行商从k城市出发必须经过每一个城市且只在一个城市逗留一次，最后回到出发的k城
 * 参数给定一个matrix，给定k。返回总距离最短的路的距离
 *
 * 铺砖问题（最优解其实是轮廓线dp，但是这个解法对大厂刷题来说比较难，掌握课上的解法即可）
 * 你有无限的1*2的砖块，要铺满M*N的区域，
 * 不同的铺法有多少种?
 */
public class T {
}
