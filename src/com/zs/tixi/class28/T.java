package com.zs.tixi.class28;

/**
 * KMP算法
 *      假设字符串str长度为N,字符串match长度为M,M<=N
 *      想确定str中是否有某个子串是等于match的.
 *      时间复杂度O(N)
 *
 * KMP算法核心
 *      1)如何理解next数组
 *      2)如何利用next数组加速匹配过程,优化时的两个实质.
 *
 * 题目一:
 *      给定两颗二叉树的头节点head1和head2
 *      想知道head1中是否有某个子树的结构和head2完全一样.
 *
 * 题目二:
 *      判断str1和str2是否是旋转字符串.
 *      旋转字符串指的是将字符串包含任意个字符的左部分移动到右边.
 *      例如123456和456123互为旋转串.
 */
public class T {
}
