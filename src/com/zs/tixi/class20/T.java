package com.zs.tixi.class20;

/**
 * 动态规划
 *
 * 题目一：
 *      给定两个长度都为N的数组weights和values。
 *      weights[i]和values[i]分别代表i号物品的重量和价值。
 *      给定一个正数bag，表示一个载重为bag的袋子。
 *      你装的物品不能超过这个重量。
 *      返回你能装下的最大价值是多少？
 *
 * 题目二：
 *      规定1和A对应，2和B对应，3和C对应...26和Z对应。
 *      那么一个数字字符串比如'111'可以转化为:
 *      'AAA', 'KA', 'AK'
 *      给定一个只有数字字符组成的字符串str，返回有多少种转化结果。
 *
 * 题目三：
 *      给定一个字符串str，给定一个字符串数组arr，出现的字符都是小写英文
 *      arr每一个字符串，代表一张贴纸，你可以把单个字符剪开使用，目的是拼出来str。
 *      返回需要至少多少张贴纸可以完成这个任务：
 *      例如：str='babac', arr={"ba", "c", "abcd"}
 *      ba+ba+c 3 abcd+abcd 2 abcd+ba 2
 *      所以返回2
 *
 * 题目四：
 *      给定两个字符串str1和str2
 *      返回这两个字符串的最长公共子序列
 *      比如：str1="a12b3c456d", str2="1ef23ghi4j56k"
 *      最长公共子序列是"123456"，所以返回长度6.
 */
public class T {
}
