package com.zs.tixi.class22;

/**
 * 题目一：[从左往右的尝试模型(每次选择往下或往右走)]
 *      给定一个二维数组matrix，一个人必须从左上角出发，最后到达右下角。
 *      沿途只可以向下或者向右走，沿途的数字都累加就是距离累加和
 *      返回最小距离累加和。
 *      (尝试数组压缩技巧)
 *
 * 题目二：[从左往右的尝试模型（每个位置选择要还是不要）]
 *      arr是货币数组，其中的值都是正数。再给定一个正数aim。
 *      每个值都认为是一张货币。
 *      即使是值相同的货币也认为每一张都是不同的。
 *      返回组成aim的方法数。
 *      例如：arr={1, 1, 1}, aim = 2
 *      第0个和第1个能组成2，第1个和第2个呢个组成2，第0个和 第三个能组成2，
 *      一共三种方法，所以返回3.
 *
 * 题目三:[从左往右的尝试模型（每个位置选择要N张,N受到rest限制）]
 *      arr是面值数组，其中的值都是正数且没有重复。再给定一个正数aim。
 *      每个值都认为是一种面值，且认为张数是无限的。
 *      返回组成aim的方法数。
 *      例如：arr={1, 2} aim=4
 *      方法如下：1+1+1+1, 1+1+2, 2+2
 *      一共就三种方法所以返回3.
 *
 * 题目四：[从左往右的尝试模型（每个位置选择要N张,N受到rest和当前位置张数限制）]
 *      arr是货币数组，其中的值都是正数，再给定一个正数aim。
 *      每个值都认为是一张货币
 *      认为值相同的货币没有什么不同。
 *      返回组成aim的方法数。
 *      例如：arr={1, 2, 1, 1, 2, 1, 2}, aim=4
 *      方法：1+1+1+1, 1+1+2, 2+2
 *      一共就三种方法，返回3.
 *
 * 题目五：[从左往右的尝试模型（每次尝试上下左右四个方向）]
 *      给定5个参数：N, M, row, col, k
 *      表示在N*M的区域上，醉汉Bob初始在(row, col)位置上。
 *      Bob一共要迈出k步，且每步都会等概率向上下左右任意方向走一个单位。
 *      任何时候Bob只要离开N*M的区域，就会直接死亡
 *      返回K步后，Bob还在N*M的区域的概率。
 *
 */
public class T {
}
